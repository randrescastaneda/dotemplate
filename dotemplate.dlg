* developed by E. F. Haghish - 2018

VERSION 14
POSITION . . 400 475

LIST file_ext
BEGIN
	select
	ado-file
	do-file
END

LIST file_style
BEGIN
	select
	Basic
	Complete
END


DIALOG make, label("dotemplate - Create template for Stata files") 
BEGIN				 
	// select installable files
	TEXT tx_doinfo  10  20  . ., label("file information")
	
	// Type of file
	TEXT tx_fext  10   +20  . 290, label("File ext*")
	COMBOBOX cm_ext  100    @  70  .  , dropdownlist contents(file_ext)
	
	// Style of file
	TEXT tx_fstyle  10   +25  . 290, label("Style*")
	COMBOBOX cm_style  100    @  70  .  , dropdownlist contents(file_style)

	// Name of the file
	TEXT tx_name 10 +25 . ., label("file name*")
	EDIT name    100 @ 290 19 , default("")
	
	// Objective of the document
	TEXT tx_obj 10 +20 . ., label("Objective")
	EDIT objective    100 @ 290 19, default("")
	
	// Number of seciton
	TEXT tx_sec 10 +20 . ., label("# sections")
	EDIT section    100 @ 290 19, default("")

	// Number of subsections
	TEXT tx_sub 10 +20 . ., label("# subsections")
	EDIT subsection    100 @ 290 19, default("")

	// Author information
	TEXT tx_autinfo  10   +40  . ., label("Author information")
	
	// Author of the document
	TEXT tx_author 10 +20 . +59, label("author*")
	EDIT author 100 @ 290 19  
	
	// E-mail
	TEXT tx_email 10 +20 . ., label("e-mail*")
	EDIT email 100 @ 290 19  
	 
	// Affiliation
	TEXT tx_affiliation 10 +20 . ., label("affiliation")
	EDIT affiliation 100 @ 290 19   
	 
	// URL
	TEXT tx_url 10 +20 . ., label("url link")
	EDIT url 100 @ 290 19  
	
	// required
	TEXT tx_required  10   +40  . 290, label("* stared items are required")
	
END

OK ok1,      label("OK")
CANCEL can1, label("Cancel")
SUBMIT sub1, label("Submit")
HELP hlp1,   view("help usersite")
RESET res1
COPY copy1





// ---------------------------------------------------------
// MAKE COMMAND
// =========================================================
PROGRAM command
BEGIN
	
	// repository, name, title, version, author should be specified
	if (!make.name | make.name.iseq("")) {
		stopbox stop "repository name is required"
	}
	if (!make.title | make.title.iseq("")) {
		stopbox stop "repository title is required"
	}
	if (!make.version | make.version.iseq("")) {
		stopbox stop "verion is required"
	}
	if (!make.author) {
		stopbox stop "author name is required"
	}
	if (!make.email | make.email.iseq("")) {
		stopbox stop "email is required"
	}
	if (!make.license | make.license.iseq("select")) {
		stopbox stop "license is required"
	}
	

	

	
	// one of the installing or ancillary files should be specified
	if (!make.ffile & !make.axfile) {
		stopbox stop "select installation and/or ancillary files"
	}
	
	put "makedlg "
	put make.name 
	put ", "
	

	option make.replace						// replace
	option make.toc						    // create toc 
	option make.pkg						    // create pkg
	option make.make						// create make.do
	option make.readme						// create readme
	
	
	if (make.title) {
			put "title(`"`"""'
			put make.title
			put `"""'"') "
	}
		
	if (make.version) {
		put "version(" `"""'
		put make.version
		put `"""'") "
	}
	
	if (make.description) {
		put "description(`"`"""'
		put make.description
		put `"""'"') "
	}
	
	if (make.license) {
		put "license(" `"""'
		put make.license
		put `"""'") "
	}
	
	if (make.author) {
		put "author(" `"""'
		put make.author
		put `"""'") "
	}
	
	if (make.affiliation) {
		put "affiliation(" `"""'
		put make.affiliation
		put `"""'") "
	}
	
	
	if (make.url) {
		put "url(" `"""'
		put make.url
		put `"""'") "
	}
	
	if (make.email) {
		put "email(" `"""'
		put make.email
		put `"""'") "
	}
	
	
	if (make.ffile) {
		put "install(`"`"""'
		require make.ffile
		put make.ffile
		put `"""'"') "
	}
	
	if (make.axfile) {
		put "ancillary(`"`"""'
		require make.axfile
		put make.axfile
		put `"""'"') "
	}
		
		
END

